//Loader fadeout
$(document).ready(function () {
    $('.loader').fadeOut("slow");
    assignTooltip();
    setPaginationInputLen()
    $('.dropdown input[type=text]').val('');
    $(".pagination-input").val(1);
    
});
// Example starter JavaScript for disabling form submissions if there are invalid fields
(() => {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    const forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
            }

            form.classList.add('was-validated')
        }, false)
    })
})();

// formate date 
// function formateDate() {
//     const currentDate = new Date();
//     const formattedDate = currentDate.toISOString().slice(0, 19)?.replace('T', ' ') + ' (UTC)';
//     // $("#formattedDate").text(formattedDate);
// }
// formateDate();

function setTableWidth() {
    // Table td width
    var totalWidth = 0;
    $('table td:not(:last-child) .td-inner-div').each(function () {
        tdWidth = $(this).width();
        $(this).parent().css('width', tdWidth);
        totalWidth += tdWidth
    });
}

function setTableLoader(tableId) {
    var loader = ` <div class="position-absolute table-loader w-100 h-100 top-0 start-0 bg-white bg-opacity-75 d-flex justify-content-center align-items-center z-1">
        <div class="spinner-border spinner-border-sm" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>`;
    $(`#${tableId}`).append(loader);
}

function removeTableLoader(tableId) {
    $(`#${tableId}` + ' .table-loader').remove();
}

function Toast(val, flag, time) {

    var cls = 'primary';
    if (flag == 1) {
        cls = 'success';
    } else if (flag == 0) {
        cls = 'danger';
    }
    val = val.replace(/</g, "&lt;").replace(/>/g, "&gt;");
    var alert = `<div class="toast ${cls} show align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${val}
                        </div>
                        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>`;
                  

    $(".toast").remove();
    $('.toast-wrapper').append(alert);
    if (typeof time == 'undefined' || time == null) {
        time = 3000;
    }
    window.setTimeout(function () {
        window.setTimeout(function () {
            $('.toast').remove();
        }, 600);
    }, time);

}

function postAjaxRequest(baseUrl, method, data, cb) {
    let url = $('#base_url').val() + baseUrl;
    $.ajax({
        type: method,
        url,
        data: JSON.stringify(data),
        contentType: 'application/json',
        success: function (response) {
            cb(response);
        },
        error: function (xhr, status, error) {
            const errorMessage = JSON.parse(xhr.responseText).message;
            console.error("Error in postAjaxRequest", errorMessage);
            Toast(errorMessage, 0, 3000)
        },
    });
}
function postAjaxRequestForImageUpload(baseUrl, method, data, cb) {
    let url = $('#base_url').val() + baseUrl;
    $.ajax({
        type: method,
        url,
        data: JSON.stringify(data),
        contentType: 'multipart/form-data; boundary=----WebKitFormBoundaryszBKsjCDYviWMiPc',
        success: function (response) {
            cb(response);
        },
        error: function (xhr, status, error) {
            const errorMessage = JSON.parse(xhr.responseText).message;
            console.error("Error in postAjaxRequest", errorMessage);
            Toast(errorMessage, 0, 3000)
        },
    });
}

// Sidebar toggle
$('#sidebarToggle').click(function () {
    $('body').toggleClass('sidenav-toggled');
})

$('#close-navbar').click(function () {
    $('body').removeClass('sidenav-toggled');
})

$('.toggle-body').click(function (evt) {
    if (evt.target.id == "navbar" || evt.target.id == 'sidebarToggle') return;
    if ($(evt.target).closest('#navbar').length || $(evt.target).closest('#sidebarToggle').length) return;
    $('body').removeClass('sidenav-toggled');

});

// Pagination input 
function setPaginationInputLen(len) {
    let px = (len + 1) * 8 + 'px'
    $('.pagination-input').css("width", px)
}

$(document).on('keyup', '.pagination-input', function () {
    let val = parseInt($(this).val().length);
    setPaginationInputLen(val)
});

// Tooltip
function assignTooltip() {
    // Clear all tooltips
    const tooltips = document.querySelectorAll('.tooltip');
    tooltips.forEach(tooltip => {
        tooltip.parentNode.removeChild(tooltip);
    });

    // Initialize tooltips
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
}

// Popover
const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]')
const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))

if ($('.popover-dismiss')[0]) {
    const popover = new bootstrap.Popover('.popover-dismiss', {
        trigger: 'focus'
    });
}

// var textInputs = document.querySelectorAll('input');
// textInputs.forEach(function (input) {
//     input.addEventListener('input', function () {
//         this.value = this.value.replace(/[<>]/g, '');
//     });
// });

function setCookie(name, value, days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}
function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

const toggleBtn = document.getElementById("menu-toggle-btn");
const closeBtn = document.getElementById("menu-close-btn");
const sidebar = document.getElementById("mobile-menu-drawer");

if(toggleBtn){
    // Toggle sidebar
    toggleBtn.addEventListener("click", () => {
      sidebar.classList.toggle("open-sidebar-menu");
    });
}

if(closeBtn){
    // Close sidebar on close button click
    closeBtn.addEventListener("click", () => {
      sidebar.classList.remove("open-sidebar-menu");
    });
}

// Close on outside click
document.addEventListener("click", (e) => {
    if(sidebar && toggleBtn){
        const isClickInsideDrawer = sidebar.contains(e.target);
        const isClickOnToggle = toggleBtn.contains(e.target);
      
        if (!isClickInsideDrawer && !isClickOnToggle) {
          sidebar.classList.remove("open-sidebar-menu");
        }

    }
});


$(document).on("click", ".copy-data", function () {
    const data = $(this).data("copy").trim();
    console.log(data);
    
    if (data) {
        // Create temporary textarea element
        const $temp = $("<textarea>");
        $("body").append($temp);
        $temp.val(data).select();
        
        try {
            // Try modern clipboard API first
            if (navigator.clipboard && window.isSecureContext) {
                navigator.clipboard.writeText(data).then(() => {
                }).catch(() => {
                    // Fallback to execCommand
                    document.execCommand("copy");
                });
            } else {
                // Fallback for older browsers
                document.execCommand("copy");
            }
            Toast("Copied to clipboard!", 1, 2000);
        } catch (err) {
            console.error('Failed to copy: ', err);
        } finally {
            // Clean up
            $temp.remove();
        }
    }
});

$(document).on("click", "#subscribe-btn", function () {
    const email = $('#subscribe-email').val().trim();
    if (email) {
        $('#subscribe-btn').prop('disabled', true);
        $('#subscribe-btn-spinner').removeClass('d-none');
        postAjaxRequest('subscribe', 'POST', { email }, function (response) {
            $('#subscribe-btn').prop('disabled', false);
            $('#subscribe-btn-spinner').addClass('d-none');
            Toast(response.msg, response.flag, 3000);
            if (response.flag == 1) {
                $('#subscribe-email').val('');
            }
        });
    } else {
        Toast("Please enter a valid email address.", 0, 3000);
    }
})